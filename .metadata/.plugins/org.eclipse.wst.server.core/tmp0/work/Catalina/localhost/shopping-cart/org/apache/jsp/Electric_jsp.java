/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.24
 * Generated at: 2024-10-14 09:32:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class Electric_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html> \r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Electricity Bill Payment</title>\r\n");
      out.write("    <!-- Bootstrap CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        .bill-container {\r\n");
      out.write("            max-width: 500px;\r\n");
      out.write("            margin: 50px auto;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            background-color: #f9f9f9;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("        .bill-header {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-bill {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("        }\r\n");
      out.write("        .result-container {\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            background-color: #e9ecef;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("   \r\n");
      out.write("<div class=\"container bill-container\">\r\n");
      out.write("    <h2 class=\"bill-header\">Electricity Bill Payment</h2>\r\n");
      out.write("    <form id=\"billPaymentForm\">\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"accountNumber\">Account Number:</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"accountNumber\" placeholder=\"Enter your 12-digit account number\" required>\r\n");
      out.write("            <small id=\"accountError\" class=\"text-danger\" style=\"display: none;\">Please enter a valid 12-digit account number.</small>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"provider\">Provider:</label>\r\n");
      out.write("            <select class=\"form-control\" id=\"provider\" required>\r\n");
      out.write("                <option value=\"\">Select Provider</option>\r\n");
      out.write("                <option value=\"ABC Electricity\">UP Electricity</option>\r\n");
      out.write("                <option value=\"XYZ Power\">MP Power</option>\r\n");
      out.write("                <option value=\"DEF Energy\">MH Energy</option>\r\n");
      out.write("            </select>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"billAmount\">Bill Amount:</label>\r\n");
      out.write("            <input type=\"number\" class=\"form-control\" id=\"billAmount\" placeholder=\"Enter bill amount\" required>\r\n");
      out.write("            <small id=\"amountError\" class=\"text-danger\" style=\"display: none;\">Amount must be a positive number.</small>\r\n");
      out.write("        </div>\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-primary btn-bill\" onclick=\"displayBillDetails()\">Show Bill Details</button>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    <!-- Result Section -->\r\n");
      out.write("    <div id=\"result\" class=\"result-container\" style=\"display: none;\">\r\n");
      out.write("        <h3>Bill Details</h3>\r\n");
      out.write("        <p><strong>Account Number:</strong> <span id=\"displayAccountNumber\"></span></p>\r\n");
      out.write("        <p><strong>Provider:</strong> <span id=\"displayProvider\"></span></p>\r\n");
      out.write("        <p><strong>Bill Amount:</strong> â‚¹<span id=\"displayBillAmount\"></span></p>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.html", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- jQuery -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("<!-- Bootstrap JS -->\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    function displayBillDetails() {\r\n");
      out.write("        // Get the values from the form\r\n");
      out.write("        var accountNumber = document.getElementById(\"accountNumber\").value;\r\n");
      out.write("        var provider = document.getElementById(\"provider\").value;\r\n");
      out.write("        var billAmount = document.getElementById(\"billAmount\").value;\r\n");
      out.write("        var accountError = document.getElementById(\"accountError\");\r\n");
      out.write("        var amountError = document.getElementById(\"amountError\");\r\n");
      out.write("\r\n");
      out.write("        // Validate the account number (should be 12 digits)\r\n");
      out.write("        if (!/^\\d{12}$/.test(accountNumber)) {\r\n");
      out.write("            accountError.style.display = \"block\";\r\n");
      out.write("            return; // Stop the function if validation fails\r\n");
      out.write("        } else {\r\n");
      out.write("            accountError.style.display = \"none\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Validate the bill amount (should be positive and non-zero)\r\n");
      out.write("        if (billAmount <= 0) {\r\n");
      out.write("            amountError.style.display = \"block\";\r\n");
      out.write("            return; // Stop the function if validation fails\r\n");
      out.write("        } else {\r\n");
      out.write("            amountError.style.display = \"none\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Display the values in the result section\r\n");
      out.write("        document.getElementById(\"displayAccountNumber\").innerText = accountNumber;\r\n");
      out.write("        document.getElementById(\"displayProvider\").innerText = provider;\r\n");
      out.write("        document.getElementById(\"displayBillAmount\").innerText = billAmount;\r\n");
      out.write("\r\n");
      out.write("        // Show the result section\r\n");
      out.write("        document.getElementById(\"result\").style.display = \"block\";\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
